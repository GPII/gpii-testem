{
  "version": 3,
  "sources": [
    "/Users/duhrer/Source/rtf/gpii-testem/src/js/coverageReceiverMiddleware.js"
  ],
  "names": [
    "fluid",
    "require",
    "gpii",
    "registerNamespace",
    "fs",
    "path",
    "mkdirp",
    "testem",
    "coverage",
    "receiver",
    "uaMatch",
    "ua",
    "toLowerCase",
    "match",
    "exec",
    "indexOf",
    "name",
    "version",
    "initMiddleware",
    "that",
    "options",
    "coverageDir",
    "resolvedCoverageDir",
    "module",
    "resolvePath",
    "middlewareImpl",
    "request",
    "response",
    "coveragePayload",
    "body",
    "payload",
    "browser",
    "get",
    "testPath",
    "document",
    "testFilename",
    "split",
    "pop",
    "coverageFilename",
    "id",
    "Math",
    "round",
    "random",
    "join",
    "coverageOutputPath",
    "writeFile",
    "JSON",
    "stringify",
    "encoding",
    "error",
    "status",
    "send",
    "isError",
    "message",
    "defaults",
    "gradeNames",
    "method",
    "invokers",
    "middleware",
    "funcName",
    "args",
    "listeners"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* eslint-env node */\n\"use strict\";\nvar fluid = require(\"infusion\");\nvar gpii  = fluid.registerNamespace(\"gpii\");\n\nrequire(\"gpii-express\");\n//fluid.require(\"%gpii-express\");\n\nvar fs     = require(\"fs\");\nvar path   = require(\"path\");\nvar mkdirp = require(\"mkdirp\");\n\nfluid.registerNamespace(\"gpii.testem.coverage.receiver\");\n\n\n// Adapted from `fluid.match`: https://github.com/fluid-project/infusion/blob/16a963d63dce313ab3f2e3a81c725c2cbef0af79/src/framework/core/js/FluidDocument.js#L31\n// (We can't use it directly because the rest of that file is designed to work only in a browser).\ngpii.testem.coverage.receiver.uaMatch = function (ua) {\n    ua = ua.toLowerCase();\n\n    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\n        /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\n        /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\n        /(msie) ([\\w.]+)/.exec( ua ) ||\n        ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) || [];\n\n    return {\n        name: match[ 1 ] || \"unknown\",\n        version: match[ 2 ] || \"0\"\n    };\n};\n\ngpii.testem.coverage.receiver.initMiddleware = function (that) {\n    if (that.options.coverageDir) {\n        var resolvedCoverageDir = fluid.module.resolvePath(that.options.coverageDir);\n        mkdirp(resolvedCoverageDir);\n    }\n};\n\ngpii.testem.coverage.receiver.middlewareImpl = function (that, request, response) {\n    var resolvedCoverageDir = fluid.module.resolvePath(that.options.coverageDir);\n\n    var coveragePayload = request.body.payload;\n\n    var browser      = gpii.testem.coverage.receiver.uaMatch(fluid.get(coveragePayload, \"navigator.userAgent\"));\n\n    var testPath     = fluid.get(coveragePayload.document, \"URL\");\n    var testFilename = testPath ? testPath.split(\"/\").pop() : \"unknown\";\n\n    var coverageFilename    = [\"coverage\", \"-\", browser.name, \"-\", browser.version, \"-\", testFilename, \"-\", that.id, \"-\", Math.round(Math.random() * 10000), \".json\"].join(\"\");\n    var coverageOutputPath  = path.join(resolvedCoverageDir, coverageFilename);\n\n    fs.writeFile(coverageOutputPath, JSON.stringify(coveragePayload.coverage, null, 2), { encoding: \"utf8\"}, function (error) {\n        if (error) {\n            response.status(500).send({ isError: true, message: error});\n        }\n        else {\n            response.status(200).send({ message: \"You have successfully saved your coverage report.\"});\n        }\n    });\n};\n\nfluid.defaults(\"gpii.testem.coverage.receiver.middleware\", {\n    gradeNames: [\"gpii.express.middleware\"],\n    path:   \"/\",\n    method: [\"put\", \"post\"],\n    invokers: {\n        middleware: {\n            funcName: \"gpii.testem.coverage.receiver.middlewareImpl\",\n            args: [\"{that}\", \"{arguments}.0\", \"{arguments}.1\", \"{arguments}.2\"]\n        }\n    },\n    listeners: {\n        \"onCreate.init\": {\n            funcName: \"gpii.testem.coverage.receiver.initMiddleware\",\n            args:     [\"{that}\"]\n        }\n    }\n});\n"
  ]
}